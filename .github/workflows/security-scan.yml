name: Validate Infrastructure
on: pull_request

permissions:
  contents: write
  id-token: write

defaults:
  run:
    working-directory: ./Infra

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up TFLint
        id: setup-tflint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: "latest"
          github_token: ${{ secrets.GITHUBTOKEN }}

      - name: Init TFLint
        id: init-tflint
        run: tflint --init

      - name: Run TFLint
        id: run-tflint
        run: tflint

      - name: Checkov GitHub Action
        id: security-scan-checkov
        uses: bridgecrewio/checkov-action@master
        with:
          output_format: cli,sarif
          output_file_path: console,results.sarif

      - name: Upload SARIF file
        id: upload-security-scan-results
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: results.sarif

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::211125325699:role/Demo_Access
          aws-region: us-east-1

      - name: Check Terraform Formatting
        id: format-check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        id: init
        run: terraform init
 
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        
      - name: Terraform test
        run: |
         terraform testa
        continue-on-error: tru
      
      - name: Terraform Plan
        id: plan
        continue-on-error: true
        shell: bash
        env:
          TF_IN_AUTOMATION: "true"
        run: |
          terraform plan -no-color > plan.txt
          cat plan.txt
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          cat plan.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Inject Terraform Plan into README.md
        run: |
          echo -e "\n## Terraform Plan Output\n" >> $GITHUB_WORKSPACE/README.md
          cat plan.txt >> $GITHUB_WORKSPACE/README.md

      - name: Setup Node.js
        if: github.event_name == 'pull_request'
        uses: actions/setup-node@v3.9.1
        with:
          node-version: '18'

      - name: Install terraform-docs
        if: github.event_name == 'pull_request'
        run: |
          curl -sSLo ./terraform-docs.tar.gz https://terraform-docs.io/dl/v0.16.0/terraform-docs-v0.16.0-$(uname)-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          mv terraform-docs /usr/local/bin/

      - name: Generate Terraform Docs and Commit
        if: github.event_name == 'pull_request'
        run: |
          git config --local user.email "devops979@gmail.com"
          git config --local user.name "devops979"

          terraform-docs markdown . > README.md.new
          mv README.md.new README.md

          if [ -f README.md ]; then
            commit -m "docs: Update README.md with Terraform plan and docs"; then
              echo "Successfully committed README.md changes."
            else
              echo "No README.md changes to commit."
            fi
          fi

      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUBTOKEN }}
          script: |
            const output = `#### Terraform Format and Style 
#### Terraform Initialization 
#### Terraform Validation 
#### Terraform Plan 

<details><summary>Show Plan</summary>

\`\`\`
${process.env.PLAN}
\`\`\`

</details>

*Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
